// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Phone_Shop.DataAccess.DBContext;

#nullable disable

namespace Phone_Shop.DataAccess.Migrations
{
    [DbContext(typeof(PhoneShopContext))]
    [Migration("20240916082721_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Phone_Shop.Common.Entity.Cart", b =>
                {
                    b.Property<int>("CartId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("cart_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CartId"));

                    b.Property<int>("CustomerId")
                        .HasColumnType("int")
                        .HasColumnName("customer_id");

                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("product_id");

                    b.Property<int>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("quantity");

                    b.HasKey("CartId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("ProductId");

                    b.ToTable("cart");
                });

            modelBuilder.Entity("Phone_Shop.Common.Entity.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("category_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("category_name");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("is_deleted");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("update_at");

                    b.HasKey("CategoryId");

                    b.ToTable("category");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            CategoryName = "Samsung",
                            CreatedAt = new DateTime(2024, 7, 3, 1, 46, 24, 556, DateTimeKind.Unspecified).AddTicks(3326),
                            IsDeleted = false,
                            UpdateAt = new DateTime(2024, 7, 3, 1, 46, 24, 556, DateTimeKind.Unspecified).AddTicks(3336)
                        },
                        new
                        {
                            CategoryId = 2,
                            CategoryName = "Oppo",
                            CreatedAt = new DateTime(2024, 7, 3, 1, 46, 24, 556, DateTimeKind.Unspecified).AddTicks(3339),
                            IsDeleted = false,
                            UpdateAt = new DateTime(2024, 7, 3, 1, 46, 24, 556, DateTimeKind.Unspecified).AddTicks(3339)
                        },
                        new
                        {
                            CategoryId = 3,
                            CategoryName = "Iphone",
                            CreatedAt = new DateTime(2024, 7, 3, 1, 46, 24, 556, DateTimeKind.Unspecified).AddTicks(3341),
                            IsDeleted = false,
                            UpdateAt = new DateTime(2024, 7, 3, 1, 46, 24, 556, DateTimeKind.Unspecified).AddTicks(3341)
                        },
                        new
                        {
                            CategoryId = 4,
                            CategoryName = "Vivo",
                            CreatedAt = new DateTime(2024, 7, 3, 1, 46, 24, 556, DateTimeKind.Unspecified).AddTicks(3342),
                            IsDeleted = false,
                            UpdateAt = new DateTime(2024, 7, 3, 1, 46, 24, 556, DateTimeKind.Unspecified).AddTicks(3342)
                        },
                        new
                        {
                            CategoryId = 5,
                            CategoryName = "Nokia",
                            CreatedAt = new DateTime(2024, 7, 3, 1, 46, 24, 556, DateTimeKind.Unspecified).AddTicks(3343),
                            IsDeleted = false,
                            UpdateAt = new DateTime(2024, 7, 3, 1, 46, 24, 556, DateTimeKind.Unspecified).AddTicks(3343)
                        });
                });

            modelBuilder.Entity("Phone_Shop.Common.Entity.Client", b =>
                {
                    b.Property<int>("ClientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("client_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClientId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<string>("HardwareInfo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("hardware_info");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("is_deleted");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("update_at");

                    b.HasKey("ClientId");

                    b.ToTable("client");
                });

            modelBuilder.Entity("Phone_Shop.Common.Entity.Feedback", b =>
                {
                    b.Property<int>("FeedbackId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("feedback_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FeedbackId"));

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("comment");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<int>("CreatorId")
                        .HasColumnType("int")
                        .HasColumnName("creator_id");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("is_deleted");

                    b.Property<int>("OrderDetailId")
                        .HasColumnType("int")
                        .HasColumnName("order_detail_id");

                    b.Property<int>("Rate")
                        .HasColumnType("int")
                        .HasColumnName("rate");

                    b.Property<int?>("ReplyId")
                        .HasColumnType("int")
                        .HasColumnName("reply_id");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("update_at");

                    b.HasKey("FeedbackId");

                    b.HasIndex("CreatorId");

                    b.HasIndex("OrderDetailId");

                    b.HasIndex("ReplyId");

                    b.ToTable("feedback");
                });

            modelBuilder.Entity("Phone_Shop.Common.Entity.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("order_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("address");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int")
                        .HasColumnName("customer_id");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("is_deleted");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("note");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("status");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("update_at");

                    b.HasKey("OrderId");

                    b.HasIndex("CustomerId");

                    b.ToTable("order");
                });

            modelBuilder.Entity("Phone_Shop.Common.Entity.OrderDetail", b =>
                {
                    b.Property<int>("OrderDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("order_detail_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderDetailId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("image");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("is_deleted");

                    b.Property<int>("OrderId")
                        .HasColumnType("int")
                        .HasColumnName("order_id");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("price");

                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("product_id");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("product_name");

                    b.Property<int>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("quantity");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("update_at");

                    b.HasKey("OrderDetailId");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("order_detail");
                });

            modelBuilder.Entity("Phone_Shop.Common.Entity.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("product_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int")
                        .HasColumnName("category_id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("image");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("is_deleted");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("price");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("product_name");

                    b.Property<int>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("quantity");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("update_at");

                    b.HasKey("ProductId");

                    b.HasIndex("CategoryId");

                    b.ToTable("product");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            CategoryId = 2,
                            CreatedAt = new DateTime(2024, 7, 3, 1, 46, 24, 556, DateTimeKind.Unspecified).AddTicks(3477),
                            Image = "https://cdn.tgdd.vn/Products/Images/42/240631/oppo-a16-silver-8-600x600.jpg",
                            IsDeleted = false,
                            Price = 7.67m,
                            ProductName = "OPPO A16",
                            Quantity = 10,
                            UpdateAt = new DateTime(2024, 7, 3, 1, 46, 24, 556, DateTimeKind.Unspecified).AddTicks(3477)
                        },
                        new
                        {
                            ProductId = 2,
                            CategoryId = 3,
                            CreatedAt = new DateTime(2024, 7, 3, 1, 46, 24, 556, DateTimeKind.Unspecified).AddTicks(3480),
                            Image = "https://cdn.tgdd.vn/Products/Images/42/153856/iphone-xi-xanhla-600x600.jpg",
                            IsDeleted = false,
                            Price = 12.23m,
                            ProductName = "iPhone 11",
                            Quantity = 10,
                            UpdateAt = new DateTime(2024, 7, 3, 1, 46, 24, 556, DateTimeKind.Unspecified).AddTicks(3480)
                        },
                        new
                        {
                            ProductId = 3,
                            CategoryId = 3,
                            CreatedAt = new DateTime(2024, 7, 3, 1, 46, 24, 556, DateTimeKind.Unspecified).AddTicks(3483),
                            Image = "https://cdn.tgdd.vn/Products/Images/42/230529/iphone-13-pro-max-gold-1-600x600.jpg",
                            IsDeleted = false,
                            Price = 20.40m,
                            ProductName = "iPhone 13 Pro Max",
                            Quantity = 10,
                            UpdateAt = new DateTime(2024, 7, 3, 1, 46, 24, 556, DateTimeKind.Unspecified).AddTicks(3483)
                        },
                        new
                        {
                            ProductId = 4,
                            CategoryId = 3,
                            CreatedAt = new DateTime(2024, 7, 3, 1, 46, 24, 556, DateTimeKind.Unspecified).AddTicks(3485),
                            Image = "https://cdn.tgdd.vn/Products/Images/42/228744/iphone-12-pro-max-xanh-duong-new-600x600-600x600.jpg",
                            IsDeleted = false,
                            Price = 18.70m,
                            ProductName = "iPhone 12 Pro Max 512GB",
                            Quantity = 10,
                            UpdateAt = new DateTime(2024, 7, 3, 1, 46, 24, 556, DateTimeKind.Unspecified).AddTicks(3485)
                        },
                        new
                        {
                            ProductId = 5,
                            CategoryId = 3,
                            CreatedAt = new DateTime(2024, 7, 3, 1, 46, 24, 556, DateTimeKind.Unspecified).AddTicks(3489),
                            Image = "https://cdn.tgdd.vn/Products/Images/42/230521/iphone-13-pro-sierra-blue-600x600.jpg",
                            IsDeleted = false,
                            Price = 17.53m,
                            ProductName = "iPhone 13 Pro",
                            Quantity = 10,
                            UpdateAt = new DateTime(2024, 7, 3, 1, 46, 24, 556, DateTimeKind.Unspecified).AddTicks(3490)
                        },
                        new
                        {
                            ProductId = 6,
                            CategoryId = 4,
                            CreatedAt = new DateTime(2024, 7, 3, 1, 46, 24, 556, DateTimeKind.Unspecified).AddTicks(3492),
                            Image = "https://cdn.tgdd.vn/Products/Images/42/249720/Vivo-y15s-2021-xanh-den-660x600.jpg",
                            IsDeleted = false,
                            Price = 6.86m,
                            ProductName = "Vivo Y15 series",
                            Quantity = 10,
                            UpdateAt = new DateTime(2024, 7, 3, 1, 46, 24, 556, DateTimeKind.Unspecified).AddTicks(3492)
                        },
                        new
                        {
                            ProductId = 7,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2024, 7, 3, 1, 46, 24, 556, DateTimeKind.Unspecified).AddTicks(3594),
                            Image = "https://cdn.tgdd.vn/Products/Images/42/235838/Galaxy-S22-Ultra-Burgundy-600x600.jpg",
                            IsDeleted = false,
                            Price = 8.99m,
                            ProductName = "Galaxy S22 Ultra 5G",
                            Quantity = 10,
                            UpdateAt = new DateTime(2024, 7, 3, 1, 46, 24, 556, DateTimeKind.Unspecified).AddTicks(3494)
                        },
                        new
                        {
                            ProductId = 8,
                            CategoryId = 4,
                            CreatedAt = new DateTime(2024, 7, 3, 1, 46, 24, 556, DateTimeKind.Unspecified).AddTicks(3596),
                            Image = "https://cdn.tgdd.vn/Products/Images/42/238047/vivo-v21-5g-xanh-den-600x600.jpg",
                            IsDeleted = false,
                            Price = 5.56m,
                            ProductName = "Vivo V21 5G",
                            Quantity = 10,
                            UpdateAt = new DateTime(2024, 7, 3, 1, 46, 24, 556, DateTimeKind.Unspecified).AddTicks(3496)
                        },
                        new
                        {
                            ProductId = 9,
                            CategoryId = 4,
                            CreatedAt = new DateTime(2024, 7, 3, 1, 46, 24, 556, DateTimeKind.Unspecified).AddTicks(3597),
                            Image = "https://cdn.tgdd.vn/Products/Images/42/278949/vivo-y55-den-thumb-600x600.jpg",
                            IsDeleted = false,
                            Price = 10.23m,
                            ProductName = "Vivo Y55",
                            Quantity = 10,
                            UpdateAt = new DateTime(2024, 7, 3, 1, 46, 24, 556, DateTimeKind.Unspecified).AddTicks(3498)
                        },
                        new
                        {
                            ProductId = 10,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2024, 7, 3, 1, 46, 24, 556, DateTimeKind.Unspecified).AddTicks(3503),
                            Image = "https://cdn.tgdd.vn/Products/Images/42/251856/samsung-galaxy-a03-xanh-thumb-600x600.jpg",
                            IsDeleted = false,
                            Price = 8.99m,
                            ProductName = "Samsung Galaxy A03",
                            Quantity = 10,
                            UpdateAt = new DateTime(2024, 7, 3, 1, 46, 24, 556, DateTimeKind.Unspecified).AddTicks(3504)
                        },
                        new
                        {
                            ProductId = 11,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2024, 7, 3, 1, 46, 24, 556, DateTimeKind.Unspecified).AddTicks(3505),
                            Image = "https://cdn.tgdd.vn/Products/Images/42/246199/samsung-galaxy-a33-5g-xanh-thumb-600x600.jpg",
                            IsDeleted = false,
                            Price = 5.50m,
                            ProductName = "Samsung Galaxy A33 5G 6GB",
                            Quantity = 10,
                            UpdateAt = new DateTime(2024, 7, 3, 1, 46, 24, 556, DateTimeKind.Unspecified).AddTicks(3506)
                        },
                        new
                        {
                            ProductId = 12,
                            CategoryId = 4,
                            CreatedAt = new DateTime(2024, 7, 3, 1, 46, 24, 556, DateTimeKind.Unspecified).AddTicks(3507),
                            Image = "https://cdn.tgdd.vn/Products/Images/42/240286/vivo-y53s-xanh-600x600.jpg",
                            IsDeleted = false,
                            Price = 4.65m,
                            ProductName = "Vivo Y53s",
                            Quantity = 10,
                            UpdateAt = new DateTime(2024, 7, 3, 1, 46, 24, 556, DateTimeKind.Unspecified).AddTicks(3508)
                        },
                        new
                        {
                            ProductId = 13,
                            CategoryId = 5,
                            CreatedAt = new DateTime(2024, 7, 3, 1, 46, 24, 556, DateTimeKind.Unspecified).AddTicks(3510),
                            Image = "https://cdn.tgdd.vn/Products/Images/42/270207/nokia-g21-xanh-thumb-600x600.jpg",
                            IsDeleted = false,
                            Price = 2.77m,
                            ProductName = "Nokia G21",
                            Quantity = 10,
                            UpdateAt = new DateTime(2024, 7, 3, 1, 46, 24, 556, DateTimeKind.Unspecified).AddTicks(3511)
                        },
                        new
                        {
                            ProductId = 14,
                            CategoryId = 5,
                            CreatedAt = new DateTime(2024, 7, 3, 1, 46, 24, 556, DateTimeKind.Unspecified).AddTicks(3512),
                            Image = "https://cdn.tgdd.vn/Products/Images/42/272148/Nokia-g11-x%C3%A1m-thumb-600x600.jpg",
                            IsDeleted = false,
                            Price = 1.99m,
                            ProductName = "Nokia G11",
                            Quantity = 10,
                            UpdateAt = new DateTime(2024, 7, 3, 1, 46, 24, 556, DateTimeKind.Unspecified).AddTicks(3513)
                        },
                        new
                        {
                            ProductId = 15,
                            CategoryId = 2,
                            CreatedAt = new DateTime(2024, 7, 3, 1, 46, 24, 556, DateTimeKind.Unspecified).AddTicks(3514),
                            Image = "https://cdn.tgdd.vn/Products/Images/42/271717/oppo-reno7-z-5g-thumb-1-1-600x600.jpg",
                            IsDeleted = false,
                            Price = 10.25m,
                            ProductName = "OPPO Reno7 series",
                            Quantity = 10,
                            UpdateAt = new DateTime(2024, 7, 3, 1, 46, 24, 556, DateTimeKind.Unspecified).AddTicks(3514)
                        },
                        new
                        {
                            ProductId = 16,
                            CategoryId = 5,
                            CreatedAt = new DateTime(2024, 7, 3, 1, 46, 24, 556, DateTimeKind.Unspecified).AddTicks(3516),
                            Image = "https://cdn.tgdd.vn/Products/Images/42/235995/Nokia%20g10%20xanh%20duong-600x600.jpg",
                            IsDeleted = false,
                            Price = 3.65m,
                            ProductName = "Nokia G10",
                            Quantity = 10,
                            UpdateAt = new DateTime(2024, 7, 3, 1, 46, 24, 556, DateTimeKind.Unspecified).AddTicks(3516)
                        },
                        new
                        {
                            ProductId = 17,
                            CategoryId = 5,
                            CreatedAt = new DateTime(2024, 7, 3, 1, 46, 24, 556, DateTimeKind.Unspecified).AddTicks(3518),
                            Image = "https://cdn.tgdd.vn/Products/Images/42/228366/nokia-215-xanh-ngoc-new-600x600-600x600.jpg",
                            IsDeleted = false,
                            Price = 2.65m,
                            ProductName = "Nokia 215 4G",
                            Quantity = 10,
                            UpdateAt = new DateTime(2024, 7, 3, 1, 46, 24, 556, DateTimeKind.Unspecified).AddTicks(3518)
                        },
                        new
                        {
                            ProductId = 18,
                            CategoryId = 2,
                            CreatedAt = new DateTime(2024, 7, 3, 1, 46, 24, 556, DateTimeKind.Unspecified).AddTicks(3520),
                            Image = "https://cdn.tgdd.vn/Products/Images/42/250622/oppo-find-x5-pro-den-thumb-600x600.jpg",
                            IsDeleted = false,
                            Price = 10.35m,
                            ProductName = "OPPO Find X5 Pro 5G",
                            Quantity = 10,
                            UpdateAt = new DateTime(2024, 7, 3, 1, 46, 24, 556, DateTimeKind.Unspecified).AddTicks(3521)
                        },
                        new
                        {
                            ProductId = 19,
                            CategoryId = 2,
                            CreatedAt = new DateTime(2024, 7, 3, 1, 46, 24, 556, DateTimeKind.Unspecified).AddTicks(3522),
                            Image = "https://cdn.tgdd.vn/Products/Images/42/270360/OPPO-A76-%C4%91en-600x600.jpg",
                            IsDeleted = false,
                            Price = 7.99m,
                            ProductName = "OPPO A76",
                            Quantity = 10,
                            UpdateAt = new DateTime(2024, 7, 3, 1, 46, 24, 556, DateTimeKind.Unspecified).AddTicks(3522)
                        });
                });

            modelBuilder.Entity("Phone_Shop.Common.Entity.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("role_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("is_deleted");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("role_name");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("update_at");

                    b.HasKey("RoleId");

                    b.ToTable("role");

                    b.HasData(
                        new
                        {
                            RoleId = 1,
                            CreatedAt = new DateTime(2024, 7, 3, 1, 46, 24, 556, DateTimeKind.Unspecified).AddTicks(3385),
                            IsDeleted = false,
                            RoleName = "Admin",
                            UpdateAt = new DateTime(2024, 7, 3, 1, 46, 24, 556, DateTimeKind.Unspecified).AddTicks(3385)
                        },
                        new
                        {
                            RoleId = 2,
                            CreatedAt = new DateTime(2024, 7, 3, 1, 46, 24, 556, DateTimeKind.Unspecified).AddTicks(3387),
                            IsDeleted = false,
                            RoleName = "Staff",
                            UpdateAt = new DateTime(2024, 7, 3, 1, 46, 24, 556, DateTimeKind.Unspecified).AddTicks(3387)
                        },
                        new
                        {
                            RoleId = 3,
                            CreatedAt = new DateTime(2024, 7, 3, 1, 46, 24, 556, DateTimeKind.Unspecified).AddTicks(3389),
                            IsDeleted = false,
                            RoleName = "Customer",
                            UpdateAt = new DateTime(2024, 7, 3, 1, 46, 24, 556, DateTimeKind.Unspecified).AddTicks(3389)
                        });
                });

            modelBuilder.Entity("Phone_Shop.Common.Entity.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("address");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("email");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("full_name");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("is_deleted");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("password");

                    b.Property<string>("Phone")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("phone");

                    b.Property<int>("RoleId")
                        .HasColumnType("int")
                        .HasColumnName("role_id");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("update_at");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("username");

                    b.HasKey("UserId");

                    b.HasIndex("RoleId");

                    b.ToTable("user");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            CreatedAt = new DateTime(2024, 7, 3, 1, 46, 24, 556, DateTimeKind.Unspecified).AddTicks(3457),
                            Email = "fellcock2@gmail.com",
                            FullName = "Chu Quang Quan",
                            IsDeleted = false,
                            Password = "c1d0e46fdeb2b72758a6a5bd5eecf2622ff8b84a8964c8e9687c6c05c9f474b5",
                            Phone = "8851738015",
                            RoleId = 3,
                            UpdateAt = new DateTime(2024, 7, 3, 1, 46, 24, 556, DateTimeKind.Unspecified).AddTicks(3357),
                            Username = "QuangQuan"
                        },
                        new
                        {
                            UserId = 2,
                            Address = "Fpt Hòa Lạc",
                            CreatedAt = new DateTime(2024, 7, 3, 1, 46, 24, 556, DateTimeKind.Unspecified).AddTicks(3460),
                            Email = "ducnm8101@gmail.com",
                            FullName = "Nguyen Minh Duc",
                            IsDeleted = false,
                            Password = "c1d0e46fdeb2b72758a6a5bd5eecf2622ff8b84a8964c8e9687c6c05c9f474b5",
                            Phone = "5541282702",
                            RoleId = 3,
                            UpdateAt = new DateTime(2024, 7, 3, 1, 46, 24, 556, DateTimeKind.Unspecified).AddTicks(3360),
                            Username = "MinhDuc"
                        },
                        new
                        {
                            UserId = 3,
                            CreatedAt = new DateTime(2024, 7, 3, 1, 46, 24, 556, DateTimeKind.Unspecified).AddTicks(3462),
                            Email = "bkervin4@gmail.com",
                            FullName = "Kirk Nelson",
                            IsDeleted = false,
                            Password = "70db85967ceb5ab1d79060fe0e2fc536f02ca747086564989953385fe58cab7f",
                            Phone = "4533389559",
                            RoleId = 1,
                            UpdateAt = new DateTime(2024, 7, 3, 1, 46, 24, 556, DateTimeKind.Unspecified).AddTicks(3362),
                            Username = "Admin123"
                        },
                        new
                        {
                            UserId = 4,
                            CreatedAt = new DateTime(2024, 7, 3, 1, 46, 24, 556, DateTimeKind.Unspecified).AddTicks(3485),
                            Email = "oparagreen0@gmail.com",
                            FullName = "Nguyen Thi Thu",
                            IsDeleted = false,
                            Password = "c1d0e46fdeb2b72758a6a5bd5eecf2622ff8b84a8964c8e9687c6c05c9f474b5",
                            Phone = "0984739845",
                            RoleId = 3,
                            UpdateAt = new DateTime(2024, 7, 3, 1, 46, 24, 556, DateTimeKind.Unspecified).AddTicks(3385),
                            Username = "ThuThu"
                        },
                        new
                        {
                            UserId = 5,
                            Address = "FSoft Academy",
                            CreatedAt = new DateTime(2024, 9, 16, 15, 27, 21, 649, DateTimeKind.Local).AddTicks(7810),
                            Email = "DuocNQ1@fpt.com",
                            FullName = "Nguyen Quoc Duoc",
                            IsDeleted = false,
                            Password = "c1d0e46fdeb2b72758a6a5bd5eecf2622ff8b84a8964c8e9687c6c05c9f474b5",
                            RoleId = 2,
                            UpdateAt = new DateTime(2024, 9, 16, 15, 27, 21, 649, DateTimeKind.Local).AddTicks(7819),
                            Username = "DuocNQ1"
                        },
                        new
                        {
                            UserId = 6,
                            CreatedAt = new DateTime(2024, 7, 3, 1, 46, 24, 556, DateTimeKind.Unspecified).AddTicks(3390),
                            Email = "",
                            FullName = "Nguyen Anh Tuan",
                            IsDeleted = false,
                            Password = "c1d0e46fdeb2b72758a6a5bd5eecf2622ff8b84a8964c8e9687c6c05c9f474b5",
                            Phone = "6298446654",
                            RoleId = 3,
                            UpdateAt = new DateTime(2024, 7, 3, 1, 46, 24, 556, DateTimeKind.Unspecified).AddTicks(3390),
                            Username = "AnhTuan"
                        },
                        new
                        {
                            UserId = 7,
                            Address = "FSoft Academy",
                            CreatedAt = new DateTime(2024, 9, 16, 15, 27, 21, 649, DateTimeKind.Local).AddTicks(7833),
                            Email = "LamLT1@fsoft.com",
                            FullName = "Luu Tung Lam",
                            IsDeleted = false,
                            Password = "c1d0e46fdeb2b72758a6a5bd5eecf2622ff8b84a8964c8e9687c6c05c9f474b5",
                            RoleId = 2,
                            UpdateAt = new DateTime(2024, 9, 16, 15, 27, 21, 649, DateTimeKind.Local).AddTicks(7834),
                            Username = "LamLT1"
                        });
                });

            modelBuilder.Entity("Phone_Shop.Common.Entity.UserClient", b =>
                {
                    b.Property<int>("ClientId")
                        .HasColumnType("int")
                        .HasColumnName("client_id");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<DateTime>("ExpireDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("expire_date");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("is_deleted");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("token");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("update_at");

                    b.HasKey("ClientId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("user_client");
                });

            modelBuilder.Entity("Phone_Shop.Common.Entity.Cart", b =>
                {
                    b.HasOne("Phone_Shop.Common.Entity.User", "Customer")
                        .WithMany("Carts")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Phone_Shop.Common.Entity.Product", "Product")
                        .WithMany("Carts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Phone_Shop.Common.Entity.Feedback", b =>
                {
                    b.HasOne("Phone_Shop.Common.Entity.User", "Creator")
                        .WithMany("Feedbacks")
                        .HasForeignKey("CreatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Phone_Shop.Common.Entity.OrderDetail", "OrderDetail")
                        .WithMany("Feedbacks")
                        .HasForeignKey("OrderDetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Phone_Shop.Common.Entity.Feedback", "Reply")
                        .WithMany("InversionReply")
                        .HasForeignKey("ReplyId");

                    b.Navigation("Creator");

                    b.Navigation("OrderDetail");

                    b.Navigation("Reply");
                });

            modelBuilder.Entity("Phone_Shop.Common.Entity.Order", b =>
                {
                    b.HasOne("Phone_Shop.Common.Entity.User", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Phone_Shop.Common.Entity.OrderDetail", b =>
                {
                    b.HasOne("Phone_Shop.Common.Entity.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Phone_Shop.Common.Entity.Product", "Product")
                        .WithMany("OrderDetails")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Phone_Shop.Common.Entity.Product", b =>
                {
                    b.HasOne("Phone_Shop.Common.Entity.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Phone_Shop.Common.Entity.User", b =>
                {
                    b.HasOne("Phone_Shop.Common.Entity.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Phone_Shop.Common.Entity.UserClient", b =>
                {
                    b.HasOne("Phone_Shop.Common.Entity.Client", "Client")
                        .WithMany("UserClients")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Phone_Shop.Common.Entity.User", "User")
                        .WithMany("UserClients")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Phone_Shop.Common.Entity.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Phone_Shop.Common.Entity.Client", b =>
                {
                    b.Navigation("UserClients");
                });

            modelBuilder.Entity("Phone_Shop.Common.Entity.Feedback", b =>
                {
                    b.Navigation("InversionReply");
                });

            modelBuilder.Entity("Phone_Shop.Common.Entity.Order", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("Phone_Shop.Common.Entity.OrderDetail", b =>
                {
                    b.Navigation("Feedbacks");
                });

            modelBuilder.Entity("Phone_Shop.Common.Entity.Product", b =>
                {
                    b.Navigation("Carts");

                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("Phone_Shop.Common.Entity.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("Phone_Shop.Common.Entity.User", b =>
                {
                    b.Navigation("Carts");

                    b.Navigation("Feedbacks");

                    b.Navigation("Orders");

                    b.Navigation("UserClients");
                });
#pragma warning restore 612, 618
        }
    }
}
